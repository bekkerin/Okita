using UnityEngine;
using System.Collections;

//ATTACH THE FIRST PERSON SHOOTER-MOVE SCRIPT TO THE CAMERA SO YOU CAN "SEE" WHAT THE CAMERA SEES. OTHER OPTIONS LATER INVOLVE LOOKING OVER GUNS, LOOKING AT THE BACK OF A PERSON, ETC -  AND THAT INVOLVES ALIGNING THE CAMERA WITH THE WEAPON OR PERSON SO THIS IS EASIER AT FIRST.
// WE HAVE LOOKED AT MOVING THE CAMERA WITH THE KEYBOARD (ASWD KEYS) BUT THIS ONLY LETS US GO IN TWO DIMENSIONS (AD FOR LEFT/RIGHT, WS FOR FORWARD/BACKWARD). WITH THE MOUSE WE CAN ALSO DO ROTATIONS. WITH THE KEYBOARD AND THE MOUSE, WE CAN MOVE NATURALLY. THE KEYBOARD MAKES US MOVE FORWARD/BACK AND LEFT/RIGHT, THE MOUSE CHANGES ROTATION. 
// THIS SCRIPT COVERS THE KEYBOARD INPUT. THE OTHER SCRIPT(AIM) COVERS THE MOUSE INPUT.
// THE CAMERA AND ALL CYLINDERS HAVE CAPSULE COLLIDERS SO THE CAMERA CANNOT MOVE THROUGH THEM LIKE ON PREVIOUS PROJECTS.
public class FPSMove : MonoBehaviour
{

	// Use this for initialization
	void Start()
	{
	
	}
	
	// Update is called once per frame
	public float speed = 0.1f; //WITH A SPEED OF 1, EVERYTHING WOULD GO TO FAST. THE 1 PROBABLY REFERS TO THE GRID UNITS.
	void Update()
	{
        //TRANSFORM HAS RIGHT BUT NO LEFT, AND HAS FORWARD BUT NO BACK. 
        // THE TRANSFORM GIVES US A CHANGE IN VECTOR, NOT AN ABSOLUTE POSITION. SO, WE NEED TO ADD IT TO THE CURRENT TRANSFORM VECTOR.
        // THE TRANSFORM DOES NOT HAVE LEFT OR BACK. JUST TYPE  transform.  AND YOU WILL SEE RIGHT AND FORWARD IN THE DROPDOWN, BUT NOT LEFT AND BACK.

		if (Input.GetKey(KeyCode.W))
		{
			transform.position += transform.forward * speed; //+= AND FORWARD IS FORWARD
		}
		if (Input.GetKey(KeyCode.S))
		{
			transform.position -= transform.forward * speed; // -= AND FORWARD IS BACK
		}
		if (Input.GetKey(KeyCode.A))
		{
			transform.position -= transform.right * speed; //-= AND RIGHT IS LEFT
		}
		if (Input.GetKey(KeyCode.D))
		{
			transform.position += transform.right * speed;// += AND RIGHT IS RIGHT
		}


	}

}
